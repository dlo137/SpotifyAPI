{"version":3,"sources":["images/cover.jpg","App.js","index.js"],"names":["module","exports","__webpack_require__","p","spotifyApi","SpotifyWebApi","clientId","redirectUri","App","recentSong","setRecentSong","useState","useEffect","window","location","hash","includes","accessToken","URLSearchParams","substring","get","setAccessToken","parseAccessToken","getMyRecentlyPlayedTracks","limit","then","response","track","items","name","artist","artists","albumCover","album","images","url","catch","error","console","authUrl","concat","join","href","authorizeSpotify","React","createElement","className","src","alt","Fragment","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0JAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sICOxC,MAAMC,EAAa,WAAIC,GAGjBC,EAAW,mCAIXC,EAAc,wBAuELC,MArDf,WACE,MAAOC,EAAYC,GAAiBC,mBAAS,MA8B7C,OA5BAC,oBAAU,KAEkBC,OAAOC,SAASC,KAAKC,SAAS,kBAb5D,WACE,MACMC,EADS,IAAIC,gBAAgBL,OAAOC,SAASC,KAAKI,UAAU,IACvCC,IAAI,gBAC/BhB,EAAWiB,eAAeJ,GAiBtBK,GAEAlB,EAAWmB,0BAA0B,CAAEC,MAAO,IAC3CC,KAAMC,IACL,MAAMC,EAAQD,EAASE,MAAM,GAAGD,MAChCjB,EAAc,CACZmB,KAAMF,EAAME,KACZC,OAAQH,EAAMI,QAAQ,GAAGF,KACzBG,WAAYL,EAAMM,MAAMC,OAAO,GAAGC,QAGrCC,MAAOC,IACNC,QAAQD,MAAM,wCAAyCA,MAvCjE,WACE,MACME,EAAO,oDAAAC,OAAuDlC,EAAQ,kBAAAkC,OAAiBjC,EAAW,WAAAiC,OADzF,CAAC,6BACyGC,KAAK,OAAM,wBACpI5B,OAAOC,SAAS4B,KAAOH,EAqBnBI,IAkBD,IAKDC,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,OAAKC,UAAU,mBACZrC,GAAcmC,IAAAC,cAAA,OAAKE,IAAKtC,EAAWuB,WAAYgB,IAAI,iBAGtDJ,IAAAC,cAAA,OAAKC,UAAU,sBACfF,IAAAC,cAAA,KAAGC,UAAU,mBAAkB,mBAC5BrC,GACCmC,IAAAC,cAAAD,IAAAK,SAAA,KACEL,IAAAC,cAAA,MAAIC,UAAU,aAAarC,EAAWoB,MACtCe,IAAAC,cAAA,SAAIpC,EAAWqB,aCtEhBoB,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHV,IAAAC,cAACD,IAAMW,WAAU,KACfX,IAAAC,cAACrC,EAAG","file":"static/js/main.812b846a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover.1e03fc80.jpg\";","import './App.css';\nimport albumCover from \"../src/images/cover.jpg\"\nimport React, { useEffect, useState } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\n\n/*============================================= AUTHORIZATION SECTIONS ============================================= */\n\nconst spotifyApi = new SpotifyWebApi();\n\n// Replace with your own Spotify App credentials\nconst clientId = '98753eb9bbb74bee992a5f56e9c690be';\nconst clientSecret = 'd0f79534054a404a8b6ba0039387d2b8';\n\n// Set your redirect URI in the Spotify Developer Dashboard\nconst redirectUri = 'http://localhost:3000';\n\n// Redirect the user to Spotify's authorization page\nfunction authorizeSpotify() {\n  const scopes = ['user-read-recently-played'];\n  const authUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join('%20')}&response_type=token`;\n  window.location.href = authUrl;\n}\n\n// After the user authorizes your app and is redirected back, parse the access token from the URL\nfunction parseAccessToken() {\n  const params = new URLSearchParams(window.location.hash.substring(1));\n  const accessToken = params.get('access_token');\n  spotifyApi.setAccessToken(accessToken);\n}\n\n/*============================================= APP SECTION  =============================================*/\n\nfunction App() {\n  const [recentSong, setRecentSong] = useState(null);\n\n  useEffect(() => {\n    // Check if an access token exists\n    const accessTokenExists = window.location.hash.includes('access_token=');\n\n    if (!accessTokenExists) {\n      // If no access token, redirect to authorize\n      authorizeSpotify();\n    } else {\n      // If access token is in the URL, parse it\n      parseAccessToken();\n      // Fetch the user's recently played tracks\n      spotifyApi.getMyRecentlyPlayedTracks({ limit: 1 })\n        .then((response) => {\n          const track = response.items[0].track;\n          setRecentSong({\n            name: track.name,\n            artist: track.artists[0].name,\n            albumCover: track.album.images[0].url,\n          });\n        })\n        .catch((error) => {\n          console.error('Error fetching recently played track:', error);\n        });\n    }\n  }, []);\n\n/*============================================= JSX/RETURN SECTION  =============================================*/\n\n  return (\n    <div className=\"App-Wrapper\">\n      <div className='Spotify-Box'>\n        <div className='Album-Cover-Box'>\n          {recentSong && <img src={recentSong.albumCover} alt='album cover' />}\n        </div>\n\n        <div className='Recent-Song-Artist'> \n        <p className='recently-played'>Recently Played</p>\n          {recentSong && (\n            <>\n              <h1 className='Song-Name'>{recentSong.name}</h1>\n              <p>{recentSong.artist}</p>\n            </>\n          )}\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}